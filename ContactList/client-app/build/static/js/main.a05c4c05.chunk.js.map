{"version":3,"sources":["Reducers/ContactReducer.js","Services/APIService.js","Components/Main/ContactList/ContactItem/ContactItem.js","Actions/ContactActions.js","Components/Main/ContactList/ContactList.js","Components/SideBar/SideBar.js","Components/Main/Main.js","Components/NotFound/NotFound.js","Components/AddContact/AddContact.js","Components/EditContact/EditContact.js","Reducers/RootReducer.js","store.js","index.js"],"names":["initialState","List","CurrentContact","ContactReducer","state","action","type","console","log","payload","APIService","URL","URL_ADD","URL_DELETE","URL_EDIT","URL_STATUS_CHANGE","updateContactList","list","fetch","headers","method","body","JSON","stringify","a","this","then","responce","json","data","newContact","id","statusChangeContact","status","editedContact","service","onStatusChangeClick","onChangeStatus","index","findIndex","elem","contact","tmpList","slice","changeStatus","onDeleteClick","onDelete","splice","deleteContact","onEdit","setCurrentContact","mapDispatchToProps","connect","name","surname","email","phone","image","gender","statusClass","imgSrc","className","htmlFor","viewBox","xmlns","src","alt","onClick","to","getAllContacts","useEffect","getContactList","item","map","listItem","length","placeholder","filter","x","Main","autoComplete","NotFound","class","AddContact","PhoneNumber","isRedirect","getName","e","target","value","setState","getSurame","getPhone","getStatus","getImage","getGender","getMail","CreateContact","addContact","onAdd","props","newList","unshift","href","onSubmit","onChange","defaultValue","Component","EditContact","uuidv4","editContact","ImageSrc","combineReducers","store","createStore","RootReducer","App","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a05c4c05.chunk.js","sourcesContent":["import { assertCompletionStatement } from \"@babel/types\";\r\n\r\nconst initialState = {\r\n    List: [],\r\n    CurrentContact: \"\"\r\n}\r\n\r\nconst ContactReducer = (state = initialState, action) => {\r\n    // return state;\r\n    switch (action.type) {\r\n        case \"CONTACT_LIST_LOADED\":\r\n            console.log(\"HELLO FROM REDUCER_LOADED: \", action.payload)\r\n            return {\r\n                ...state,\r\n                List: action.payload\r\n            }\r\n        case \"STATUS_CHANGE\":\r\n            return {\r\n                ...state,\r\n                List: action.payload\r\n            }\r\n        case \"ADD_CONTACT\":\r\n            console.log(\"HELLO FROM REDUCER_ADD_CONTACT: \", action.payload)\r\n            return {\r\n                ...state,\r\n                List: action.payload\r\n            }\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                List: action.payload\r\n            }\r\n        case \"SET_CURR_CONTACT\":\r\n            return {\r\n                ...state,\r\n                CurrentContact: action.payload\r\n            }\r\n        case \"ON_EDIT\":\r\n            console.log(\"Hello from ON EDIT: \", action.payload)\r\n            return {\r\n                ...state,\r\n                List: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ContactReducer;","export default class APIService {\r\n    // URL = \"https://contactlist-fae9f-default-rtdb.firebaseio.com/contact.json\"\r\n    URL = \"/Contact/get-all\"\r\n    URL_ADD = \"/Contact/add-contact\"\r\n    URL_DELETE = \"/Contact/delete-contact\"\r\n    URL_EDIT = \"/Contact/edit-contact\"\r\n    URL_STATUS_CHANGE = \"/Contact/status-change\"\r\n\r\n    async getContactList() {\r\n        const List = await fetch(this.URL)\r\n            .then(responce => {\r\n                return responce.json();\r\n            }).then(data => {\r\n                if (data == null) {\r\n                    return {\r\n                        List: []\r\n                    }\r\n                } else {\r\n                    return {\r\n                        List: data\r\n                    }\r\n                }\r\n            })\r\n        return List\r\n    }\r\n    async addContact(newContact) {\r\n        console.log(\"ADDED CONTACT: \", newContact)\r\n        fetch(this.URL_ADD, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(newContact)\r\n        })\r\n    }\r\n    async deleteContact(id) {\r\n        fetch(this.URL_DELETE + \"/\" + id, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"DELETE\",\r\n        })\r\n    }\r\n    async changeStatus(statusChangeContact) {\r\n        fetch(this.URL_STATUS_CHANGE + \"/\" + statusChangeContact.id, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"PUT\",\r\n            body: JSON.stringify(statusChangeContact.status)\r\n        })\r\n    }\r\n    async editContact(editedContact) {\r\n        console.log(\"EDITED CONTACT: \", editedContact)\r\n        fetch(this.URL_EDIT, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"PUT\",\r\n            body: JSON.stringify(editedContact)\r\n        })\r\n    }\r\n\r\n    updateContactList = (list) => {\r\n        fetch(this.URL, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"PUT\",\r\n            body: JSON.stringify(list)\r\n        })\r\n    }\r\n}","import { Link } from \"react-router-dom\"\r\n\r\nimport { connect } from \"react-redux\"\r\nimport ContactReducer from \"../../../../Reducers/ContactReducer\";\r\nimport { assertImportSpecifier } from \"@babel/types\";\r\n\r\n//import Services\r\nimport APIService from \"../../../../Services/APIService.js\"\r\n\r\n//import actions\r\nimport { onChangeStatus, onDelete, setCurrentContact } from \"../../../../Actions/ContactActions\"\r\n\r\nconst ContactItem = ({ id, name, surname, email, phone, image, status, gender, List, onChangeStatus, onDelete, setCurrentContact }) => {\r\n\r\n    var statusClass = \"\";\r\n    if (status == \"Friend\")\r\n        statusClass = \"lab lab-warning\"\r\n    else if (status == \"Family\")\r\n        statusClass = \"lab lab-primary\"\r\n    else if (status == \"Private\")\r\n        statusClass = \"lab lab-danger\"\r\n    else if (status == \"Work\")\r\n        statusClass = \"lab lab-success\"\r\n\r\n    const imgSrc = `https://api.randomuser.me/portraits/${gender}/${image}.jpg`;\r\n\r\n    return (\r\n        < div className=\"unit\" >\r\n            <div className=\"field name\">\r\n                <div className=\"check\">\r\n                    <input id=\"cb2\" name=\"cb1\" type=\"checkbox\" />\r\n                    <label htmlFor=\"cb2\"></label>\r\n                    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <img src={imgSrc} alt=\"image\" className=\"avatar\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <span className=\"d-block\"> {name} {surname} </span>\r\n                        <span className={statusClass} onClick={() => (onStatusChangeClick(id, List, onChangeStatus))}>{status}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"field phone\">\r\n                {phone}\r\n            </div>\r\n            <div className=\"field email\">\r\n                {email}\r\n            </div>\r\n            <div>\r\n                <span onClick={() => (onDeleteClick(id, List, onDelete))}> <i className=\"fas fa-user-minus\"></i></span>\r\n                <Link to=\"/edit-contact\">\r\n                    <span onClick={() => (onEdit(id, List, setCurrentContact))} className=\"ml-3\"> <i className=\"fas fa-user-edit black-link\"></i></span>\r\n                </Link>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nvar service = new APIService();\r\n\r\nconst onStatusChangeClick = (id, List, onChangeStatus) => {\r\n    const index = List.findIndex(elem => elem.id === id);\r\n    let contact = List[index];\r\n\r\n    switch (contact.status) {\r\n        case \"Friend\":\r\n            contact.status = \"Work\";\r\n            break;\r\n        case \"Work\":\r\n            contact.status = \"Family\";\r\n            break;\r\n        case \"Family\":\r\n            contact.status = \"Private\";\r\n            break;\r\n        case \"Private\":\r\n            contact.status = \"Friend\";\r\n            break;\r\n    }\r\n\r\n    const tmpList = List.slice();\r\n    tmpList[index] = contact;\r\n\r\n    service.changeStatus(contact);\r\n\r\n    onChangeStatus(tmpList);\r\n}\r\nconst onDeleteClick = (id, List, onDelete) => {\r\n    const index = List.findIndex(elem => elem.id === id);\r\n\r\n    const tmpList = List.slice();\r\n    tmpList.splice(index, 1)\r\n\r\n    service.deleteContact(id);\r\n    onDelete(tmpList);\r\n}\r\nconst onEdit = (id, List, setCurrentContact) => {\r\n    const index = List.findIndex(elem => elem.id === id);\r\n    let contact = List[index];\r\n\r\n    setCurrentContact(contact);\r\n}\r\n\r\nconst mapStateToProps = ({ ContactReducer }) => {\r\n    const { List } = ContactReducer;\r\n    return { List };\r\n}\r\nconst mapDispatchToProps = {\r\n    onChangeStatus, onDelete, setCurrentContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);","export const getAllContacts = (list) => {\r\n    return {\r\n        type: \"CONTACT_LIST_LOADED\",\r\n        payload: list\r\n    }\r\n}\r\nexport const onChangeStatus = (list) => {\r\n    return {\r\n        type: \"STATUS_CHANGE\",\r\n        payload: list\r\n    }\r\n}\r\nexport const onAdd = (list) => {\r\n    console.log(\"HELLO FROM ADD: \", list)\r\n    return {\r\n        type: \"ADD_CONTACT\",\r\n        payload: list\r\n    }\r\n}\r\nexport const onDelete = (list) => {\r\n    return {\r\n        type: \"DELETE_CONTACT\",\r\n        payload: list\r\n    }\r\n}\r\nexport const onEdit = (list) => {\r\n    return {\r\n        type: \"ON_EDIT\",\r\n        payload: list\r\n    }\r\n}\r\nexport const setCurrentContact = (contact) => {\r\n    return {\r\n        type: \"SET_CURR_CONTACT\",\r\n        payload: contact\r\n    }\r\n}","//import components\r\nimport ContactItem from \"./ContactItem/ContactItem.js\"\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\"\r\n\r\nimport APIService from \"../../../Services/APIService\"\r\n\r\nimport { getAllContacts } from \"../../../Actions/ContactActions\"\r\n\r\nconst ContactList = ({ List, getAllContacts }) => {\r\n\r\n    useEffect(() => {\r\n        var service = new APIService();\r\n        service.getContactList().then(data => {\r\n            getAllContacts(data.List);\r\n        })\r\n    }, [])\r\n\r\n    const item = List.map(listItem => {\r\n        return (\r\n            <ContactItem key={listItem.id}\r\n                {...listItem} />\r\n        )\r\n    });\r\n    return (\r\n        <section>\r\n            {item.length > 0 ? item : <p className=\"emptyList\">Contact list is empty.</p>}\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ ContactReducer }) => {\r\n    const { List } = ContactReducer;\r\n    return { List };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getAllContacts\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SideBar = ({ List }) => {\r\n    return (\r\n        <div className=\"col-lg-3 col-md-4 col-sm-12\">\r\n            <div className=\"contacts-labels\">\r\n                {/* <div className=\"title\">All contacts<span>{ContactList.length}</span></div> */}\r\n                <div className=\"list\">\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"contacts-search\" placeholder=\"Search\" />\r\n                    </div>\r\n                    <div className=\"head\">Labels</div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-success\">Work</div><span>{List.filter(x => x.status == \"Work\").length}</span>\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-primary\">Family</div><span>{List.filter(x => x.status == \"Family\").length}</span>\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-danger\">Private</div><span>{List.filter(x => x.status == \"Private\").length}</span>\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-warning\">Friends</div><span>{List.filter(x => x.status == \"Friend\").length}</span>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary font-weight-700\">Add new label</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapPropsToState = ({ ContactReducer }) => {\r\n    const { List } = ContactReducer;\r\n    return { List };\r\n}\r\n\r\nexport default connect(mapPropsToState)(SideBar);","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// Import components\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container bootstrap snippets bootdeys bootdey\" >\r\n                <div className=\"row decor-default\">\r\n                    <SideBar />\r\n                    <div className=\"col-lg-9 col-md-8 col-sm-12\">\r\n                        <div className=\"contacts-list\">\r\n                            <Link className=\"title btn\" to=\"/add-contact\">Add new contact</Link>\r\n\r\n                            <form className=\"ac-custom ac-checkbox ac-checkmark\" autoComplete=\"off\">\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"contacts-list-search\" placeholder=\"Search\" />\r\n                                </div>\r\n                                <div className=\"unit head\">\r\n                                    <div className=\"field name\">\r\n                                        <div className=\"check\">\r\n                                            <input id=\"cb1\" name=\"cb1\" type=\"checkbox\" />\r\n                                            <label htmlFor=\"cb1\"></label>\r\n                                            <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg></div>\r\n                                        name\r\n                                    </div>\r\n                                    <div className=\"field phone\">\r\n                                        phone\r\n                                    </div>\r\n                                </div>\r\n                                <ContactList />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"error-template\">\r\n            <h1>\r\n              Oops!</h1>\r\n            <h2>\r\n              404 Not Found</h2>\r\n            <div class=\"error-details\">\r\n              Sorry, an error has occured, Requested page not found!\r\n                </div>\r\n            <div class=\"error-actions\">\r\n              <Link to=\"/\" class=\"btn btn-primary btn-lg\"><span class=\"glyphicon glyphicon-home\"></span>Take Me Home </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nexport default NotFound;","import { Component, Fragment } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\n//import actions\r\n\r\nimport { onAdd } from \"../../Actions/ContactActions\"\r\n\r\nimport { connect } from \"react-redux\"\r\n\r\n//import Services\r\nimport APIService from \"../../Services/APIService\";\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n        PhoneNumber: \"\",\r\n        status: \"\",\r\n        image: null,\r\n        gender: \"\",\r\n        isRedirect: false\r\n    }\r\n\r\n    getName = (e) => {\r\n        const name = e.target.value;\r\n        this.setState({\r\n            name: name\r\n        })\r\n    }\r\n    getSurame = (e) => {\r\n        const surname = e.target.value;\r\n        this.setState({\r\n            surname: surname\r\n        })\r\n    }\r\n    getPhone = (e) => {\r\n        const phone = e.target.value;\r\n        this.setState({\r\n            phone: phone\r\n        })\r\n    }\r\n    getStatus = (e) => {\r\n        const status = e.target.value;\r\n        this.setState({\r\n            status: status\r\n        })\r\n    }\r\n    getImage = (e) => {\r\n        const image = e.target.value;\r\n        this.setState({\r\n            image: image\r\n        })\r\n    }\r\n    getGender = (e) => {\r\n        const gender = e.target.value;\r\n        this.setState({\r\n            gender: gender\r\n        })\r\n    }\r\n    getMail = (e) => {\r\n        const email = e.target.value;\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    CreateContact = () => {\r\n        const { name, gender, surname, email, status, image, phone } = this.state;\r\n        const newContact = {\r\n            // id: uuidv4(),\r\n            name,\r\n            surname,\r\n            email,\r\n            phone,\r\n            status,\r\n            image,\r\n            gender,\r\n        }\r\n\r\n        var service = new APIService();\r\n        service.addContact(newContact);\r\n\r\n        const { onAdd } = this.props;\r\n\r\n        const { List } = this.props;\r\n\r\n        var newList = List.slice();\r\n        newList.unshift(newContact);\r\n\r\n        onAdd(newList);\r\n        this.setState({\r\n            isRedirect: true\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let { image, gender, isRedirect } = this.state;\r\n\r\n        if (isRedirect === true) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        if (image === null || image == \"\" || gender == \"\" || ((gender == \"men\" || gender == \"women\") && (image > 99 || image < 0)) || (gender == \"lego\" && (image < 0 || image > 15))) {\r\n            image = \"https://www.svgrepo.com/show/86725/person.svg\";\r\n        }\r\n        else {\r\n            image = `https://randomuser.me/api/portraits/${gender}/${image}.jpg`;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-5\">\r\n                        <div className=\"container-fluid\">\r\n                            <a className=\"navbar-brand\" href=\"#\">Contact List</a>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                                <ul className=\"navbar-nav me-auto\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to=\"/\" className=\"nav-link active\" href=\"#\">Home\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                    <form onSubmit={this.CreateContact}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col border\">\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">name</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"name\" id=\"inputDefault\" onChange={this.getName} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">surname</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"surname\" id=\"inputDefault\" onChange={this.getSurame} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">phone </label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"phone\" id=\"inputDefault\" onChange={this.getPhone} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">email</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"email\" id=\"inputDefault\" onChange={this.getMail} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">Avatar</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Avatar id\" id=\"inputDefault\" onChange={this.getImage} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"exampleSelect1\" className=\"form-label\">status</label>\r\n                                    <select type=\"select\" className=\"form-control\" id=\"exampleSelect1\" onChange={this.getStatus}>\r\n                                        <option defaultValue>Choose status</option>\r\n                                        <option>Work</option>\r\n                                        <option>Family</option>\r\n                                        <option>Private</option>\r\n                                        <option>Friend</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"exampleSelect2\" className=\"form-label\">gender</label>\r\n                                    <select type=\"select\" className=\"form-control\" id=\"exampleSelect2\" onChange={this.getGender}>\r\n                                        <option defaultValue>Choose gender</option>\r\n                                        <option value=\"men\">Man</option>\r\n                                        <option value=\"women\">Woman</option>\r\n                                        <option value=\"lego\">Lego</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={() => (this.CreateContact())}>Add</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col border text-center\">\r\n                                <img src={image} className=\"rounded addContactImg\"></img>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ ContactReducer }) => {\r\n    const { List } = ContactReducer;\r\n    return { List };\r\n}\r\nconst mapDispatchToProps = {\r\n    onAdd\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\r\n","import { Component, Fragment } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { stringify, v4 as uuidv4 } from \"uuid\"\r\n\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { onEdit, setCurrentContact } from \"../../Actions//ContactActions\"\r\nimport APIService from \"../../Services/APIService\"\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: this.props.CurrentContact.name,\r\n        surname: this.props.CurrentContact.surname,\r\n        email: this.props.CurrentContact.email,\r\n        phone: this.props.CurrentContact.phone,\r\n        status: this.props.CurrentContact.status,\r\n        image: this.props.CurrentContact.image,\r\n        gender: this.props.CurrentContact.gender,\r\n        isRedirect: \"\"\r\n    }\r\n\r\n    getName = (e) => {\r\n        const name = e.target.value;\r\n        this.setState({\r\n            name: name\r\n        })\r\n    }\r\n    getSurame = (e) => {\r\n        const surname = e.target.value;\r\n        this.setState({\r\n            surname: surname\r\n        })\r\n    }\r\n    getPhone = (e) => {\r\n        const phone = e.target.value;\r\n        this.setState({\r\n            phone: phone\r\n        })\r\n    }\r\n    getStatus = (e) => {\r\n        const status = e.target.value;\r\n        this.setState({\r\n            status: status\r\n        })\r\n    }\r\n    getImage = (e) => {\r\n        const image = e.target.value;\r\n        this.setState({\r\n            image: image\r\n        })\r\n    }\r\n    getGender = (e) => {\r\n        const gender = e.target.value;\r\n        this.setState({\r\n            gender: gender\r\n        })\r\n    }\r\n    getMail = (e) => {\r\n        const email = e.target.value;\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    EditContact = () => {\r\n        const { name, gender, surname, email, status, image, phone } = this.state;\r\n        var service = new APIService();\r\n        const newContact = {\r\n            id: uuidv4(),\r\n            name,\r\n            surname,\r\n            email,\r\n            phone,\r\n            status,\r\n            image,\r\n            gender,\r\n        }\r\n        var CurrentContact = this.props.CurrentContact;\r\n        newContact.id = CurrentContact.id;\r\n        service.editContact(newContact);\r\n\r\n        const List = this.props.List;\r\n        const index = List.findIndex(elem => elem.id === newContact.id);\r\n\r\n        const tmpList = List.slice();\r\n        tmpList[index] = newContact;\r\n\r\n        const onEdit = this.props.onEdit;\r\n        onEdit(tmpList);\r\n\r\n        console.log(\"This is edited contact: \", newContact);\r\n        this.setState({\r\n            isRedirect: true\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { CurrentContact } = this.props;\r\n        if (CurrentContact == \"\") {\r\n            this.setState({\r\n                isRedirect: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let ImageSrc;\r\n        let { isRedirect } = this.state;\r\n        let { name, gender, surname, email, status, image, phone } = this.state;\r\n\r\n        if (isRedirect == true) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        if (image === null || image == \"\" || gender == \"\" || ((gender == \"men\" || gender == \"women\") && (image > 99 || image < 0)) || (gender == \"lego\" && (image < 0 || image > 15))) {\r\n            ImageSrc = \"https://www.svgrepo.com/show/86725/person.svg\";\r\n        }\r\n        else {\r\n            ImageSrc = `https://randomuser.me/api/portraits/${gender}/${image}.jpg`;\r\n        }\r\n        return (\r\n            <Fragment>\r\n\r\n                <div className=\"mb-2\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div className=\"container-fluid\">\r\n                            <Link className=\"navbar-brand\" to=\"/\">Contact List</Link>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                                <ul className=\"navbar-nav me-auto\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to=\"/\" className=\"nav-link active\" href=\"#\">Home\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <div className=\"row bg-light border p-3\">\r\n                            <div className=\"col-8\">\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">name</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"name\" id=\"inputDefault\" defaultValue={name} onChange={this.getName} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">surname</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"surname\" defaultValue={surname} id=\"inputDefault\" onChange={this.getSurame} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">phone </label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"phone\" defaultValue={phone} id=\"inputDefault\" onChange={this.getPhone} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">email</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"email\" defaultValue={email} id=\"inputDefault\" onChange={this.getMail} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-form-label\" htmlFor=\"inputDefault\">Avatar</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Avatar id\" defaultValue={image} id=\"inputDefault\" onChange={this.getImage} />\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"exampleSelect1\" className=\"form-label\">status</label>\r\n                                    <select type=\"select\" className=\"form-control\" id=\"exampleSelect1\" onChange={this.getStatus} defaultValue >\r\n                                        <option>Work</option>\r\n                                        <option>Family</option>\r\n                                        <option>Private</option>\r\n                                        <option>Friend</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"exampleSelect2\" className=\"form-label\">gender</label>\r\n                                    <select type=\"select\" className=\"form-control\" id=\"exampleSelect2\" onChange={this.getGender} defaultValue>\r\n                                        <option value=\"men\">Man</option>\r\n                                        <option value=\"women\">Woman</option>\r\n                                        <option value=\"lego\">Lego</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" onClick={() => (this.EditContact())} className=\"btn btn-success\">Edit</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4 text-center\">\r\n                                <img src={ImageSrc} className=\"rounded addContactImg\"></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ ContactReducer }) => {\r\n    const { List } = ContactReducer;\r\n    const { CurrentContact } = ContactReducer;\r\n    return {\r\n        List: List,\r\n        CurrentContact: CurrentContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onEdit\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\r\n","import ContactReducer from \"./ContactReducer\";\r\nimport { combineReducers } from \"redux\"\r\n\r\nexport default combineReducers({\r\n    ContactReducer\r\n})","import { createStore } from \"redux\"\r\nimport RootReducer from \"./Reducers/RootReducer\"\r\n\r\nconst store = createStore(RootReducer);\r\nexport default store;","import { Component } from \"react\"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\n//import Routing\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\r\n\r\n//Import css file\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"./index.css\";\r\n\r\n//Import components\r\nimport Main from \"./Components/Main/Main\"\r\nimport NotFound from \"./Components/NotFound/NotFound\"\r\nimport AddContact from \"./Components/AddContact/AddContact\"\r\nimport EditContact from \"./Components/EditContact/EditContact\"\r\n\r\n//import services\r\nimport APIService from \"./Services/APIService\"\r\n\r\n//import store\r\nimport store from \"./store\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nclass App extends Component {\r\n  service = new APIService();\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Provider store={store}>\r\n            <Route path=\"/\" exact render={() => (<Main />)} />\r\n            <Route path=\"/add-contact\" exact render={() => (<AddContact />)} />\r\n            <Route path=\"/edit-contact\" exact render={() => (<EditContact />)} />\r\n          </Provider>\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}